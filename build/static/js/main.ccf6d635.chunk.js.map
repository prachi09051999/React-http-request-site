{"version":3,"sources":["components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","App","useState","setMovies","isLoading","setLoading","error","setError","url","setUrl","fetchRequestHandler","useCallback","a","fetch","fetchData","ok","Error","json","jsonData","newdata","results","value","episode_id","release_date","opening_crawl","message","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,wMCajBC,EAVD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,e,gBCWDC,EAfG,SAACP,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CACEO,IAAKP,EAAMQ,GACXP,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,mB,MC6EdM,MArFf,WACE,MAA2BC,mBAAS,IAApC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAqBL,mBAAS,qCAA9B,mBAAOM,EAAP,KAAWC,EAAX,KAWMC,EAAsBC,sBAAW,sBAAC,gCAAAC,EAAA,6DACtCP,GAAW,GACXE,EAAS,MAF6B,kBAIZM,MAAML,GAJM,WAI9BM,EAJ8B,QAKtBC,GALsB,sBAM5B,IAAIC,MAAM,yBANkB,wBAQbF,EAAUG,OARG,QAQ9BC,EAR8B,OAS9BC,EAAUD,EAASE,QAAQtB,KAAI,SAAAuB,GAC/B,MAAO,CACLrB,GAAIqB,EAAMC,WACV7B,MAAO4B,EAAM5B,MACbC,YAAa2B,EAAME,aACnB5B,YAAa0B,EAAMG,kBAG3BrB,EAAUgB,GAjB0B,kDAoBpCZ,EAAS,KAAMkB,SApBqB,QAsBtCpB,GAAW,GAtB2B,0DAuBtC,CAACG,IAEHkB,qBAAU,WACRhB,MACA,CAACA,IAkBH,IAAIiB,EAAU,sDAYd,OAVG9B,EAAO+B,OAAS,IACjBD,EAAU,kBAACE,EAAD,CAAYhC,OAAQA,KAE7BS,IACDqB,EAAU,2BAAIrB,IAEbF,IACDuB,EAAU,0CAIV,kBAAC,IAAMG,SAAP,KACE,iCACE,4BAAQC,QAASrB,GAAjB,gBACA,4BAAQqB,QAtEI,WAEdtB,EADS,sCAARD,EACM,mCAGA,uCAiEL,uBAEF,iCACGmB,KC9ETK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccf6d635.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__lMnXQ\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies,setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [url,setUrl] = useState('https://swapi.py4e.com/api/films/');\n\n  const toggleUrl = () => {\n    if(url === 'https://swapi.py4e.com/api/films/'){\n      setUrl('https://swapi.py4e.com/api/film/');\n    }\n    else{\n      setUrl('https://swapi.py4e.com/api/films/');\n    }\n  }\n\n  const fetchRequestHandler = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try{\n      const fetchData = await fetch(url);\n      if(!fetchData.ok){\n        throw new Error(\"Something went wrong!\");\n      }\n      const jsonData = await fetchData.json();\n      const newdata = jsonData.results.map(value => {\n            return {\n              id: value.episode_id,\n              title: value.title,\n              releaseDate: value.release_date,\n              openingText: value.opening_crawl\n            }\n          });\n      setMovies(newdata);\n    }\n    catch(error){\n      setError(error.message);\n    }\n    setLoading(false);\n  },[url]);\n\n  useEffect(()=>{\n    fetchRequestHandler();\n  },[fetchRequestHandler]);\n\n  // Shortcut to write function\n\n  // const fetchRequestHandler = () => {\n  //   fetch('https://swapi.py4e.com/api/films/').then(response => response.json()).then(data => {\n  //     const newdata = data.results.map(value => {\n  //       return {\n  //         id: value.episode_id,\n  //         title: value.title,\n  //         releaseDate: value.release_date,\n  //         openingText: value.opening_crawl\n  //       }\n  //     })\n  //     setMovies(newdata);\n  //   })\n  // }\n\n  let content = <p>Let's fetch some movies</p>\n\n  if(movies.length > 0){\n    content = <MoviesList movies={movies} />;\n  }\n  if(error){\n    content = <p>{error}</p>;\n  }\n  if(isLoading){\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchRequestHandler}>Fetch Movies</button>\n        <button onClick={toggleUrl}>Toggle Error State</button>\n      </section>\n      <section>\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}